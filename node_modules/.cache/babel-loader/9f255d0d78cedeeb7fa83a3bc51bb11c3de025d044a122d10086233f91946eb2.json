{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuarios\\\\FRANCO\\\\Desktop\\\\sisparroquiaV1\\\\src\\\\components\\\\Layout\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Creamos el contexto para el tema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Proveedor del contexto del tema\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Estado para el tema, inicializado desde localStorage o 'light' por defecto\n  const [theme, setTheme] = useState(() => {\n    // Intenta obtener el tema de localStorage al inicio\n    const storedTheme = localStorage.getItem('theme');\n    return storedTheme ? storedTheme : 'light';\n  });\n\n  // Efecto para actualizar el tema en localStorage y en el atributo 'data-theme' del HTML\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  // Función para cambiar el tema\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  // Valor que proveemos a los componentes hijos\n  const value = {\n    theme,\n    toggleTheme\n  };\n\n  // Proveemos el contexto a los componentes hijos\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"EZRKXMBvNalitBYrADKzcmGRiqQ=\");\n_c = ThemeProvider;\nexport { ThemeContext, ThemeProvider };\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","storedTheme","localStorage","getItem","setItem","document","documentElement","setAttribute","toggleTheme","prevTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Usuarios/FRANCO/Desktop/sisparroquiaV1/src/components/Layout/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Creamos el contexto para el tema\r\nconst ThemeContext = createContext();\r\n\r\n// Proveedor del contexto del tema\r\nconst ThemeProvider = ({ children }) => {\r\n  // Estado para el tema, inicializado desde localStorage o 'light' por defecto\r\n  const [theme, setTheme] = useState(() => {\r\n    // Intenta obtener el tema de localStorage al inicio\r\n    const storedTheme = localStorage.getItem('theme');\r\n    return storedTheme ? storedTheme : 'light';\r\n  });\r\n\r\n  // Efecto para actualizar el tema en localStorage y en el atributo 'data-theme' del HTML\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', theme);\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n  }, [theme]);\r\n\r\n  // Función para cambiar el tema\r\n  const toggleTheme = () => {\r\n    setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  // Valor que proveemos a los componentes hijos\r\n  const value = {\r\n    theme,\r\n    toggleTheme,\r\n  };\r\n\r\n  // Proveemos el contexto a los componentes hijos\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ThemeContext, ThemeProvider };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;;AAEpC;AACA,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACvC;IACA,MAAMU,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,OAAOF,WAAW,GAAGA,WAAW,GAAG,OAAO;EAC5C,CAAC,CAAC;;EAEF;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IACpCM,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAER,KAAK,CAAC;EAC5D,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,QAAQ,CAACS,SAAS,IAAKA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACnE,CAAC;;EAED;EACA,MAAMC,KAAK,GAAG;IACZX,KAAK;IACLS;EACF,CAAC;;EAED;EACA,oBACEd,OAAA,CAACC,YAAY,CAACgB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAb,QAAA,EACjCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjB,EAAA,CA/BIF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAiCnB,SAASD,YAAY,EAAEC,aAAa;AAAG,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}