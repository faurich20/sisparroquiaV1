{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuarios\\\\FRANCO\\\\Desktop\\\\sisparroquiaV1\\\\src\\\\components\\\\Layout\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Crea el contexto del tema\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\n\n// Crea un proveedor del tema\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Obtiene el tema guardado en el localStorage o usa 'blue' por defecto\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'blue');\n\n  // Actualiza el tema en el localStorage cada vez que cambia\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    document.documentElement.setAttribute('data-theme', theme); // Actualiza el atributo data-theme\n  }, [theme]);\n\n  // Funci贸n para cambiar el tema\n  const setThemeColor = themeColor => {\n    setTheme(themeColor);\n  };\n\n  // Devuelve el proveedor del contexto con el valor del tema y la funci贸n para cambiarlo\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      setThemeColor: setThemeColor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeProvider, \"HqPh2wBlDqhRF4anDLHOj2weVWI=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","localStorage","getItem","setItem","document","documentElement","setAttribute","setThemeColor","themeColor","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Usuarios/FRANCO/Desktop/sisparroquiaV1/src/components/Layout/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Crea el contexto del tema\r\nexport const ThemeContext = createContext();\r\n\r\n// Crea un proveedor del tema\r\nexport const ThemeProvider = ({ children }) => {\r\n    // Obtiene el tema guardado en el localStorage o usa 'blue' por defecto\r\n    const [theme, setTheme] = useState(localStorage.getItem('theme') || 'blue');\r\n\r\n    // Actualiza el tema en el localStorage cada vez que cambia\r\n    useEffect(() => {\r\n        localStorage.setItem('theme', theme);\r\n        document.documentElement.setAttribute('data-theme', theme); // Actualiza el atributo data-theme\r\n    }, [theme]);\r\n\r\n    // Funci贸n para cambiar el tema\r\n    const setThemeColor = (themeColor) => {\r\n        setTheme(themeColor);\r\n    };\r\n\r\n    // Devuelve el proveedor del contexto con el valor del tema y la funci贸n para cambiarlo\r\n    return (\r\n        <ThemeContext.Provider value={{ theme: theme, setThemeColor: setThemeColor }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC;;EAE3E;EACAV,SAAS,CAAC,MAAM;IACZS,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACpCK,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEP,KAAK,CAAC,CAAC,CAAC;EAChE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMQ,aAAa,GAAIC,UAAU,IAAK;IAClCR,QAAQ,CAACQ,UAAU,CAAC;EACxB,CAAC;;EAED;EACA,oBACId,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK,EAAEA,KAAK;MAAEQ,aAAa,EAAEA;IAAc,CAAE;IAAAV,QAAA,EACxEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAAChB,EAAA,CArBWF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}